name: Release

on:
  push:
    tags: v[0-9]+.[0-9]+.[0-9]+
permissions:
  contents: write

jobs:
  test-action:
    uses: ./.github/workflows/test.yml
    
  version-sanity-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: Version sanity check
        run: |
          # Don't allow smaller or jumping versions in the MAJOR.MINOR.PATCH format
          old_tag_name=$(git tag --list "v*" | tail -n2 | head -n1)
          new_tag_name='${{ github.ref_name }}'
          read -r old_major old_minor old_patch <<< $(echo $old_tag_name | cut -c 2- | tr '.' ' ')
          read -r new_major new_minor new_patch <<< $(echo $new_tag_name | cut -c 2- | tr '.' ' ')
          error_msg="Version tag inconsistent!\nVersion '$new_tag_name' cannot come after version '$new_tag_name' (latest released version)."
          # Check MAJOR
          if (( new_major < old_major || new_major > old_major + 1 )); then
            echo -e "$msg"
            exit 1
          fi
          # Check MINOR
          if (( (new_major > old_major && new_minor != 0) || (new_minor > old_minor + 1) )); then
            echo -e "$msg"
            exit 1
          fi
          # Check PATCH
          if (( (new_minor > old_minor && new_patch != 0) || (new_patch > old_patch + 1) )); then
            echo -e "$msg"
            exit 1
          fi

  create-release:
    runs-on: ubuntu-latest
    needs: [version-sanity-check, test-action]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda #v2.2.1
        with:
          generate_release_notes: true
          make_latest: true
    
      - name: Delete tag on failure
        if: failure()
        run: |
          git push origin --delete ${{ github.ref_name }}
          echo "The current workflow had an error. Tag '${{ github.ref_name }}' was deleted."